{"ast":null,"code":"import _toConsumableArray from \"E:\\\\React\\\\tp\\\\datta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\React\\\\tp\\\\datta\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './actions';\nimport config from './../config';\n\nvar initialState = _objectSpread({\n  isOpen: [],\n  //for active default menu\n  isTrigger: []\n}, config, {\n  isFullScreen: false // static can't change\n\n});\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var trigger = [];\n  var open = [];\n  console.log('====================================');\n  console.log('Action', action);\n  console.log('====================================');\n\n  switch (action.type) {\n    case actionTypes.COLLAPSE_MENU:\n      return _objectSpread({}, state, {\n        collapseMenu: !state.collapseMenu\n      });\n\n    case actionTypes.COLLAPSE_TOGGLE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n        var triggerIndex = trigger.indexOf(action.menu.id);\n\n        if (triggerIndex > -1) {\n          open = open.filter(function (item) {\n            return item !== action.menu.id;\n          });\n          trigger = trigger.filter(function (item) {\n            return item !== action.menu.id;\n          });\n        }\n\n        if (triggerIndex === -1) {\n          open = [].concat(_toConsumableArray(open), [action.menu.id]);\n          trigger = [].concat(_toConsumableArray(trigger), [action.menu.id]);\n        }\n      } else {\n        open = state.isOpen;\n\n        var _triggerIndex = state.isTrigger.indexOf(action.menu.id);\n\n        trigger = _triggerIndex === -1 ? [action.menu.id] : [];\n        open = _triggerIndex === -1 ? [action.menu.id] : [];\n      }\n\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_CONTENT_LEAVE:\n      return _objectSpread({}, state, {\n        isOpen: open,\n        isTrigger: trigger\n      });\n\n    case actionTypes.NAV_COLLAPSE_LEAVE:\n      if (action.menu.type === 'sub') {\n        open = state.isOpen;\n        trigger = state.isTrigger;\n\n        var _triggerIndex2 = trigger.indexOf(action.menu.id);\n\n        if (_triggerIndex2 > -1) {\n          open = open.filter(function (item) {\n            return item !== action.menu.id;\n          });\n          trigger = trigger.filter(function (item) {\n            return item !== action.menu.id;\n          });\n        }\n\n        return _objectSpread({}, state, {\n          isOpen: open,\n          isTrigger: trigger\n        });\n      }\n\n      return _objectSpread({}, state);\n\n    case actionTypes.FULL_SCREEN:\n      return _objectSpread({}, state, {\n        isFullScreen: !state.isFullScreen\n      });\n\n    case actionTypes.FULL_SCREEN_EXIT:\n      return _objectSpread({}, state, {\n        isFullScreen: false\n      });\n\n    case actionTypes.CHANGE_LAYOUT:\n      return _objectSpread({}, state, {\n        layout: action.layout\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["E:\\React\\tp\\datta\\src\\store\\reducer.js"],"names":["actionTypes","config","initialState","isOpen","isTrigger","isFullScreen","reducer","state","action","trigger","open","console","log","type","COLLAPSE_MENU","collapseMenu","COLLAPSE_TOGGLE","menu","triggerIndex","indexOf","id","filter","item","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","layout"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n    console.log('====================================');\r\n    console.log('Action', action);\r\n    console.log('====================================');\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}